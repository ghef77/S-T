-- =====================================================
-- SCRIPT DE V√âRIFICATION DES TEMPS D'EX√âCUTION CRON
-- =====================================================
-- Ce script permet de v√©rifier quand les cron jobs s'ex√©cutent
-- et d'analyser leurs patterns d'ex√©cution

-- =====================================================
-- 1. V√âRIFICATION DES CRON JOBS ACTIFS
-- =====================================================

-- Lister tous les cron jobs configur√©s
SELECT 
    'Cron Jobs Configur√©s' as section,
    jobid,
    schedule,
    command,
    nodename,
    nodeport,
    database,
    username,
    active,
    jobname
FROM cron.job
ORDER BY jobid;

-- =====================================================
-- 2. ANALYSE DES INSERTIONS R√âCENTES DANS LA TABLE
-- =====================================================

-- V√©rifier les insertions r√©centes pour d√©tecter le pattern d'ex√©cution
SELECT 
    'Insertions R√©centes (Derni√®res 24h)' as section,
    snapshot_date,
    created_at,
    object_path,
    row_count,
    -- Calculer la diff√©rence entre les insertions
    EXTRACT(EPOCH FROM (created_at - LAG(created_at) OVER (ORDER BY created_at))) / 60 as minutes_since_last
FROM table_snapshots_index 
WHERE created_at >= NOW() - INTERVAL '24 hours'
ORDER BY created_at DESC
LIMIT 50;

-- =====================================================
-- 3. PATTERN D'EX√âCUTION PAR HEURE
-- =====================================================

-- Analyser les heures d'ex√©cution pour identifier les patterns
SELECT 
    'Pattern d''Ex√©cution par Heure' as section,
    EXTRACT(HOUR FROM created_at) as hour_of_day,
    EXTRACT(MINUTE FROM created_at) as minute_of_hour,
    COUNT(*) as execution_count,
    MIN(created_at) as first_execution,
    MAX(created_at) as last_execution
FROM table_snapshots_index 
WHERE created_at >= NOW() - INTERVAL '7 days'
GROUP BY EXTRACT(HOUR FROM created_at), EXTRACT(MINUTE FROM created_at)
ORDER BY hour_of_day, minute_of_hour;

-- =====================================================
-- 4. FR√âQUENCE D'EX√âCUTION (DERNI√àRES 2 HEURES)
-- =====================================================

-- V√©rifier si le cron s'ex√©cute chaque minute
SELECT 
    'Fr√©quence d''Ex√©cution (2 derni√®res heures)' as section,
    DATE_TRUNC('minute', created_at) as execution_minute,
    COUNT(*) as snapshots_per_minute
FROM table_snapshots_index 
WHERE created_at >= NOW() - INTERVAL '2 hours'
GROUP BY DATE_TRUNC('minute', created_at)
ORDER BY execution_minute DESC;

-- =====================================================
-- 5. D√âTECTION DE CRON CHAQUE MINUTE
-- =====================================================

-- Compter les ex√©cutions par minute pour d√©tecter un cron "minute"
WITH minute_counts AS (
    SELECT 
        DATE_TRUNC('minute', created_at) as minute_slot,
        COUNT(*) as count_per_minute
    FROM table_snapshots_index 
    WHERE created_at >= NOW() - INTERVAL '1 hour'
    GROUP BY DATE_TRUNC('minute', created_at)
)
SELECT 
    'Diagnostic: Cron chaque minute?' as section,
    COUNT(*) as total_minutes_with_snapshots,
    AVG(count_per_minute) as avg_snapshots_per_minute,
    MAX(count_per_minute) as max_snapshots_per_minute,
    CASE 
        WHEN COUNT(*) > 50 THEN 'üö® CRON CHAQUE MINUTE D√âTECT√â!'
        WHEN COUNT(*) > 10 THEN '‚ö†Ô∏è Fr√©quence √©lev√©e d√©tect√©e'
        ELSE '‚úÖ Fr√©quence normale'
    END as diagnostic
FROM minute_counts;

-- =====================================================
-- 6. DERNI√àRES EX√âCUTIONS AVEC D√âTAILS
-- =====================================================

-- Afficher les 10 derni√®res ex√©cutions avec m√©tadonn√©es
SELECT 
    'Derni√®res Ex√©cutions' as section,
    id,
    snapshot_date,
    created_at,
    object_path,
    row_count,
    file_size_bytes,
    -- Extraire les m√©tadonn√©es si disponibles
    metadata->>'executionType' as execution_type,
    metadata->>'scheduledTime' as scheduled_time,
    -- Calculer le temps depuis la derni√®re ex√©cution
    EXTRACT(EPOCH FROM (NOW() - created_at)) / 60 as minutes_ago
FROM table_snapshots_index 
ORDER BY created_at DESC
LIMIT 10;

-- =====================================================
-- 7. V√âRIFICATION DES HORAIRES D'EX√âCUTION
-- =====================================================

-- Analyser si les ex√©cutions correspondent √† 10h00 comme pr√©vu
SELECT 
    'V√©rification Horaire 10h00' as section,
    DATE(created_at) as execution_date,
    EXTRACT(HOUR FROM created_at) as hour,
    EXTRACT(MINUTE FROM created_at) as minute,
    COUNT(*) as executions_count,
    CASE 
        WHEN EXTRACT(HOUR FROM created_at) = 10 AND EXTRACT(MINUTE FROM created_at) = 0 
        THEN '‚úÖ Ex√©cution √† 10h00 comme pr√©vu'
        WHEN EXTRACT(HOUR FROM created_at) = 10 
        THEN '‚ö†Ô∏è Ex√©cution √† 10h mais pas exactement √† 00 minutes'
        ELSE '‚ùå Ex√©cution hors horaire pr√©vu (10h00)'
    END as horaire_status
FROM table_snapshots_index 
WHERE created_at >= NOW() - INTERVAL '7 days'
GROUP BY DATE(created_at), EXTRACT(HOUR FROM created_at), EXTRACT(MINUTE FROM created_at)
ORDER BY execution_date DESC, hour, minute;

-- =====================================================
-- 8. R√âSUM√â DIAGNOSTIC FINAL
-- =====================================================

-- R√©sum√© global pour diagnostic rapide
WITH recent_stats AS (
    SELECT 
        COUNT(*) as total_snapshots_24h,
        COUNT(DISTINCT DATE_TRUNC('hour', created_at)) as hours_with_snapshots,
        COUNT(DISTINCT DATE_TRUNC('minute', created_at)) as minutes_with_snapshots,
        MIN(created_at) as oldest_snapshot,
        MAX(created_at) as newest_snapshot
    FROM table_snapshots_index 
    WHERE created_at >= NOW() - INTERVAL '24 hours'
)
SELECT 
    'DIAGNOSTIC FINAL' as section,
    total_snapshots_24h,
    hours_with_snapshots,
    minutes_with_snapshots,
    EXTRACT(EPOCH FROM (newest_snapshot - oldest_snapshot)) / 60 / 60 as hours_span,
    CASE 
        WHEN minutes_with_snapshots > 1000 THEN 'üö® CRON CHAQUE MINUTE CONFIRM√â!'
        WHEN minutes_with_snapshots > 100 THEN '‚ö†Ô∏è Fr√©quence tr√®s √©lev√©e'
        WHEN minutes_with_snapshots > 24 THEN '‚ö†Ô∏è Plus d''une ex√©cution par heure'
        WHEN minutes_with_snapshots <= 2 THEN '‚úÖ Cron quotidien normal'
        ELSE 'ü§î Pattern d''ex√©cution √† analyser'
    END as diagnostic_final,
    ROUND(total_snapshots_24h::numeric / 24, 2) as avg_snapshots_per_hour
FROM recent_stats;

-- =====================================================
-- 9. RECOMMANDATIONS
-- =====================================================

SELECT 
    'RECOMMANDATIONS' as section,
    'Si le diagnostic montre "CRON CHAQUE MINUTE":' as action_1,
    '1. V√©rifiez la configuration cron.json (doit √™tre "0 10 * * *")' as step_1,
    '2. Red√©ployez la fonction Edge avec: supabase functions deploy' as step_2,
    '3. V√©rifiez qu''il n''y a pas de cron jobs dupliqu√©s' as step_3,
    '4. Utilisez le script simple-recreate-table.sql pour nettoyer' as step_4,
    CURRENT_TIMESTAMP as generated_at;
